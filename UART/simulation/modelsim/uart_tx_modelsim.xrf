vendor_name = ModelSim
source_file = 1, L:/VHDL/Intel_FPGA_Projects/UART_Transmitter/uart_tx.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, L:/VHDL/Intel_FPGA_Projects/UART_Transmitter/db/uart_tx.cbx.xml
design_name = uart_tx
instance = comp, \clk~I\, clk, uart_tx, 1
instance = comp, \state.PAUSE\, state.PAUSE, uart_tx, 1
instance = comp, \Add0~5\, Add0~5, uart_tx, 1
instance = comp, \clk_counter[1]\, clk_counter[1], uart_tx, 1
instance = comp, \Add0~0\, Add0~0, uart_tx, 1
instance = comp, \clk_counter[2]\, clk_counter[2], uart_tx, 1
instance = comp, \Add0~145\, Add0~145, uart_tx, 1
instance = comp, \Add0~75\, Add0~75, uart_tx, 1
instance = comp, \clk_counter[4]\, clk_counter[4], uart_tx, 1
instance = comp, \Add0~150\, Add0~150, uart_tx, 1
instance = comp, \clk_counter[5]\, clk_counter[5], uart_tx, 1
instance = comp, \Add0~70\, Add0~70, uart_tx, 1
instance = comp, \clk_counter[6]\, clk_counter[6], uart_tx, 1
instance = comp, \Add0~85\, Add0~85, uart_tx, 1
instance = comp, \clk_counter[7]\, clk_counter[7], uart_tx, 1
instance = comp, \Add0~80\, Add0~80, uart_tx, 1
instance = comp, \clk_counter[8]\, clk_counter[8], uart_tx, 1
instance = comp, \Equal1~3\, Equal1~3, uart_tx, 1
instance = comp, \Add0~65\, Add0~65, uart_tx, 1
instance = comp, \clk_counter[9]\, clk_counter[9], uart_tx, 1
instance = comp, \Add0~140\, Add0~140, uart_tx, 1
instance = comp, \clk_counter[10]\, clk_counter[10], uart_tx, 1
instance = comp, \Add0~60\, Add0~60, uart_tx, 1
instance = comp, \clk_counter[11]\, clk_counter[11], uart_tx, 1
instance = comp, \Add0~50\, Add0~50, uart_tx, 1
instance = comp, \clk_counter[12]\, clk_counter[12], uart_tx, 1
instance = comp, \Add0~55\, Add0~55, uart_tx, 1
instance = comp, \clk_counter[16]\, clk_counter[16], uart_tx, 1
instance = comp, \Equal1~2\, Equal1~2, uart_tx, 1
instance = comp, \Add0~120\, Add0~120, uart_tx, 1
instance = comp, \Add0~45\, Add0~45, uart_tx, 1
instance = comp, \clk_counter[18]\, clk_counter[18], uart_tx, 1
instance = comp, \Add0~115\, Add0~115, uart_tx, 1
instance = comp, \clk_counter[19]\, clk_counter[19], uart_tx, 1
instance = comp, \Add0~110\, Add0~110, uart_tx, 1
instance = comp, \clk_counter[20]\, clk_counter[20], uart_tx, 1
instance = comp, \Add0~105\, Add0~105, uart_tx, 1
instance = comp, \clk_counter[21]\, clk_counter[21], uart_tx, 1
instance = comp, \Add0~100\, Add0~100, uart_tx, 1
instance = comp, \clk_counter[22]\, clk_counter[22], uart_tx, 1
instance = comp, \Add0~95\, Add0~95, uart_tx, 1
instance = comp, \clk_counter[23]\, clk_counter[23], uart_tx, 1
instance = comp, \Add0~40\, Add0~40, uart_tx, 1
instance = comp, \clk_counter[24]\, clk_counter[24], uart_tx, 1
instance = comp, \Add0~90\, Add0~90, uart_tx, 1
instance = comp, \clk_counter[25]\, clk_counter[25], uart_tx, 1
instance = comp, \Add0~35\, Add0~35, uart_tx, 1
instance = comp, \clk_counter[26]\, clk_counter[26], uart_tx, 1
instance = comp, \Add0~30\, Add0~30, uart_tx, 1
instance = comp, \clk_counter[27]\, clk_counter[27], uart_tx, 1
instance = comp, \Equal1~1\, Equal1~1, uart_tx, 1
instance = comp, \Add0~25\, Add0~25, uart_tx, 1
instance = comp, \clk_counter[28]\, clk_counter[28], uart_tx, 1
instance = comp, \Add0~20\, Add0~20, uart_tx, 1
instance = comp, \clk_counter[29]\, clk_counter[29], uart_tx, 1
instance = comp, \Add0~15\, Add0~15, uart_tx, 1
instance = comp, \clk_counter[30]\, clk_counter[30], uart_tx, 1
instance = comp, \Add0~10\, Add0~10, uart_tx, 1
instance = comp, \clk_counter[31]\, clk_counter[31], uart_tx, 1
instance = comp, \Equal1~0\, Equal1~0, uart_tx, 1
instance = comp, \Equal1~4\, Equal1~4, uart_tx, 1
instance = comp, \Equal1~5\, Equal1~5, uart_tx, 1
instance = comp, \state.IDLE\, state.IDLE, uart_tx, 1
instance = comp, \clk_counter[0]\, clk_counter[0], uart_tx, 1
instance = comp, \Add0~157\, Add0~157, uart_tx, 1
instance = comp, \clk_counter[3]\, clk_counter[3], uart_tx, 1
instance = comp, \Equal2~1\, Equal2~1, uart_tx, 1
instance = comp, \Equal2~0\, Equal2~0, uart_tx, 1
instance = comp, \Add0~135\, Add0~135, uart_tx, 1
instance = comp, \clk_counter[13]\, clk_counter[13], uart_tx, 1
instance = comp, \Add0~130\, Add0~130, uart_tx, 1
instance = comp, \clk_counter[14]\, clk_counter[14], uart_tx, 1
instance = comp, \Equal2~2\, Equal2~2, uart_tx, 1
instance = comp, \Equal2~3\, Equal2~3, uart_tx, 1
instance = comp, \Selector2~0\, Selector2~0, uart_tx, 1
instance = comp, \Add0~125\, Add0~125, uart_tx, 1
instance = comp, \clk_counter[15]\, clk_counter[15], uart_tx, 1
instance = comp, \clk_counter[17]\, clk_counter[17], uart_tx, 1
instance = comp, \Equal1~7\, Equal1~7, uart_tx, 1
instance = comp, \Equal1~8\, Equal1~8, uart_tx, 1
instance = comp, \Equal1~9\, Equal1~9, uart_tx, 1
instance = comp, \Equal1~6\, Equal1~6, uart_tx, 1
instance = comp, \Equal1~10\, Equal1~10, uart_tx, 1
instance = comp, \bit_index[0]~0\, bit_index[0]~0, uart_tx, 1
instance = comp, \bit_index[0]\, bit_index[0], uart_tx, 1
instance = comp, \bit_index[1]\, bit_index[1], uart_tx, 1
instance = comp, \Add1~1\, Add1~1, uart_tx, 1
instance = comp, \bit_index[2]\, bit_index[2], uart_tx, 1
instance = comp, \process_0~0\, process_0~0, uart_tx, 1
instance = comp, \process_0~1\, process_0~1, uart_tx, 1
instance = comp, \state.SEND_FRAME\, state.SEND_FRAME, uart_tx, 1
instance = comp, \Add1~0\, Add1~0, uart_tx, 1
instance = comp, \bit_index[3]\, bit_index[3], uart_tx, 1
instance = comp, \data_out~0\, data_out~0, uart_tx, 1
instance = comp, \data_out~I\, data_out, uart_tx, 1
